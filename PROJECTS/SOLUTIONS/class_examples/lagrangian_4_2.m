% PART 2 OF LAGRAGIAN EXAMPLE OF "RPP" ROBOT
% Santiago Garcia Arango
clc; clear variables;
format short;
sympref('FloatingPointOutput',true);

% Define main system variables (keep look at part one to see why)
syms m1 m2 m3 Izz1 Izz2 Izz3; % Variables related to mass and inertia
syms x1 x1d x1dd x2 x2d x2dd x3 x3d x3dd; % Variables related to energy
syms L1; % Variables related to distances
syms g; % Gravity


% Main Lagrange equation (found in part one to see result)
L = 0.5000*m2*(sin(x1)*x2d + cos(x1)*x2*x1d)^2 + 0.5000*m2*(cos(x1)*x2d - sin(x1)*x2*x1d)^2 + ...
    0.5000*m3*(sin(x1)*x2d + cos(x1)*x2*x1d)^2 + 0.5000*m3*(cos(x1)*x2d - sin(x1)*x2*x1d)^2 + ...
    0.5000*Izz1*x1d^2 + 0.5000*Izz2*x1d^2 + 0.5000*Izz3*x1d^2 + 0.5000*m3*x3d^2 - g*m3*(L1 - x3) - ...
    L1*g*m1 - L1*g*m2

L = simplify(L)

% We do the necessary partial derivatives... 
% First arm
pLpx1d = diff(L,x1d);  % Partial derivative of L with respect of the time derivative of x1
ddtpLpx1d = diff(pLpx1d,x1)*x1d + ...
             diff(pLpx1d,x1d)*x1dd+ ...
             diff(pLpx1d,x2)*x2d + ...
             diff(pLpx1d,x2d)*x2dd + ...
             diff(pLpx1d,x3)*x3d + ...
             diff(pLpx1d,x3d)*x3dd ;
pLpx1 = diff(L,x1);

% Second arm
pLpx2d = diff(L,x2d);
ddtpLpx2d = diff(pLpx2d,x1)*x1d+ ...
             diff(pLpx2d,x1d)*x1dd+ ...
             diff(pLpx2d,x2)*x2d + ...
             diff(pLpx2d,x2d)*x2dd + ...
             diff(pLpx2d,x3)*x3d + ...
             diff(pLpx2d,x3d)*x3dd ;
pLpx2 = diff(L,x2);

% Third arm
pLpx3d = diff(L,x3d);
ddtpLpx3d = diff(pLpx3d,x1)*x1d+ ...
             diff(pLpx3d,x1d)*x1dd+ ...
             diff(pLpx3d,x2)*x2d + ...
             diff(pLpx3d,x2d)*x2dd + ...
             diff(pLpx3d,x3)*x3d + ...
             diff(pLpx3d,x3d)*x3dd ;
pLpx3 = diff(L,x3);

% Find forces of torques of the system...
% First arm
u1 = ddtpLpx1d - pLpx1;
u1 = collect(simplify(u1),x1dd)

% Second arm
u2 = ddtpLpx2d - pLpx2;
u2 = collect(simplify(u2),x2dd)

% Third arm
u3 = ddtpLpx3d - pLpx3;
u3 = collect(simplify(u3),x3dd)
